{
  "version": 4,
  "terraform_version": "1.11.2",
  "serial": 37,
  "lineage": "011dd31c-0d6b-354a-eb40-e77f65368c8b",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "archive_file",
      "name": "authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "exclude_symlink_directories": null,
            "excludes": null,
            "id": "5f6b9e66b6db45c8ac26612115beee9195663a11",
            "output_base64sha256": "cZVKuQuaVUyTf5645n9p2fmd/lW75DvxfW37oHKHX+U=",
            "output_base64sha512": "jINMNr3CaF+gKtM5A3tW1FK+5P5yuPBPJP62cw7zriuWLitNhV7EgAIfx9ZU8wUsgRElLJJ7MWoRtFWZsQufjQ==",
            "output_file_mode": null,
            "output_md5": "342f107c0b8a426972df56e6d7c5493c",
            "output_path": "./authorizer.zip",
            "output_sha": "5f6b9e66b6db45c8ac26612115beee9195663a11",
            "output_sha256": "71954ab90b9a554c937f9eb8e67f69d9f99dfe55bbe43bf17d6dfba072875fe5",
            "output_sha512": "8c834c36bdc2685fa02ad339037b56d452bee4fe72b8f04f24feb6730ef3ae2b962e2b4d855ec480021fc7d654f3052c8111252c927b316a11b45599b10b9f8d",
            "output_size": 1740,
            "source": [
              {
                "content": "import datetime\nimport json\nimport logging\nimport os\nimport urllib.parse\nimport urllib.request\nimport uuid\n\nimport boto3\n\n\nLOGGER = logging.getLogger(__name__)\nLOGGER.setLevel(os.getenv('LOG_LEVEL', 'INFO'))\n\nasm_client = boto3.client('secretsmanager')\ndynamodb_client = boto3.client('dynamodb')\n\nasm_secret_resp = asm_client.get_secret_value(SecretId=os.environ['CLIENT_SECRET_ARN'])\nasm_secret_value = json.loads(asm_secret_resp['SecretString'])\nCLIENT_ID = asm_secret_value['CLIENT_ID']\nCLIENT_SECRET = asm_secret_value['CLIENT_SECRET']\n\nAUTHORIZATION_STATES_TABLE_NAME = os.environ['AUTHORIZATION_STATES_TABLE_NAME']\nTOKENS_TABLE_NAME = os.environ['TOKENS_TABLE_NAME']\n\ndef lambda_handler(event, context):\n    req_ctx = event['requestContext']\n    domain_name = req_ctx['domainName']\n    http = req_ctx['http']\n    method = http['method']\n    path = http['path']\n\n    if (method, path) == ('POST', '/'):\n        return start_auth_session(domain_name)\n    elif (method, path) == ('GET', '/authorized'):\n        if 'queryStringParameters' not in event:\n            raise Exception('Missing query string parameters')\n        query_string = event['queryStringParameters']\n        callback_code = query_string['code']\n        callback_state = query_string['state']\n        return complete_auth_session(callback_code, callback_state, domain_name)\n\ndef start_auth_session(domain_name):\n    session_id = uuid.uuid4()\n    item = {\n        'SessionID': {\n            'S': str(session_id),\n        },\n        'Expiration': {\n            'N': str((datetime.datetime.now() + datetime.timedelta(seconds=30)).timestamp()),\n        },\n    }\n    dynamodb_client.put_item(\n        TableName=AUTHORIZATION_STATES_TABLE_NAME,\n        Item=item,\n    )\n    return {\n        'statusCode': 303,\n        'headers': {\n            'Location': 'https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize'\n                        f'?client_id={CLIENT_ID}'\n                        f'\u0026response_type=code'\n                        f'\u0026redirect_uri={urllib.parse.quote(f'https://{domain_name}/authorized', safe='')}'\n                        f'\u0026response_mode=query'\n                        f'\u0026scope=offline_access%20User.Read'\n                        f'\u0026state={session_id}'\n        },\n    }\n\ndef complete_auth_session(code, state, domain_name):\n    session_id = state\n    session_resp = None\n    try:\n        session_resp = dynamodb_client.get_item(\n            TableName=AUTHORIZATION_STATES_TABLE_NAME,\n            Key={\n                'SessionID': {\n                    'S': session_id,\n                },\n            },\n        )\n    except Exception as e:\n        LOGGER.warning('Failed to get session info from authorization-states table', e)\n        return {\n            'statusCode': 404,\n        }\n\n    session = session_resp['Item']\n    expiration = float(session['Expiration']['N'])\n    if expiration \u003c datetime.datetime.now().timestamp():\n        return {\n            'statusCode': 404,\n        }\n\n    token_req = urllib.request.Request(\n        'https://login.microsoftonline.com/consumers/oauth2/v2.0/token',\n        method='POST',\n        headers={\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        data=urllib.parse.urlencode({\n            'client_id': CLIENT_ID,\n            'scode': 'User.Read',\n            'code': code,\n            'redirect_uri': f'https://{domain_name}/authorized',\n            'grant_type': 'authorization_code',\n            'client_secret': CLIENT_SECRET,\n        }).encode('utf-8'),\n    )\n    tokens_body = None\n    try:\n        with urllib.request.urlopen(token_req, ) as token_resp:\n            if token_resp.status != 200:\n                LOGGER.warning('Failed to get token', token_resp.read())\n                return {\n                    'statusCode': 400,\n                }\n            tokens_body = json.loads(token_resp.read())\n    except:\n        LOGGER.exception('Failed to get token')\n        raise\n\n    access_token = tokens_body['access_token']\n    refresh_token = tokens_body['refresh_token']\n    expires_in = tokens_body['expires_in']\n\n    user_info_req = urllib.request.Request(\n        'https://graph.microsoft.com/v1.0/me',\n        method='GET',\n        headers={\n            'Authorization': f'Bearer {access_token}',\n        },\n    )\n    user_id = None\n    try:\n        with urllib.request.urlopen(user_info_req) as user_info_resp:\n            if user_info_resp.status != 200:\n                LOGGER.warning('Failed to get user information', token_resp.read())\n                return {\n                    'statusCode': 400,\n                }\n\n            user_info = json.loads(user_info_resp.read())\n            user_id = user_info['id']\n    except:\n        LOGGER.exception('Failed to get user information')\n        raise\n\n    token_item = {\n        'ID': {\n            'S': user_id,\n        },\n        'AccessToken': {\n            'S': access_token,\n        },\n        'RefreshToken': {\n            'S': refresh_token,\n        },\n        'ExpiresIn': {\n            'N': str(expires_in),\n        },\n    }\n    token_resp = dynamodb_client.put_item(\n        TableName=TOKENS_TABLE_NAME,\n        Item=token_item,\n    )\n    if token_resp.status != 200:\n        return {\n            'statusCode': 500,\n        }\n\n    return {\n        'statusCode': 200,\n    }\n",
                "filename": "lambda_function.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy_for_lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2690255455",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2153204805",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AccessUserCredentialStore\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:PartiQLUpdate\",\n        \"dynamodb:PartiQLSelect\",\n        \"dynamodb:PartiQLInsert\",\n        \"dynamodb:PartiQLDelete\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:DeleteItem\",\n        \"dynamodb:BetchWriteItem\",\n        \"dynamodb:BatchGetItem\"\n      ],\n      \"Resource\": [\n        \"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens\",\n        \"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states\"\n      ]\n    },\n    {\n      \"Sid\": \"AccessClientSecret\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"secretsmanager:GetSecretValue\",\n      \"Resource\": \"arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"AccessUserCredentialStore\",\"Effect\":\"Allow\",\"Action\":[\"dynamodb:UpdateItem\",\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:PutItem\",\"dynamodb:PartiQLUpdate\",\"dynamodb:PartiQLSelect\",\"dynamodb:PartiQLInsert\",\"dynamodb:PartiQLDelete\",\"dynamodb:GetItem\",\"dynamodb:DeleteItem\",\"dynamodb:BetchWriteItem\",\"dynamodb:BatchGetItem\"],\"Resource\":[\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens\",\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states\"]},{\"Sid\":\"AccessClientSecret\",\"Effect\":\"Allow\",\"Action\":\"secretsmanager:GetSecretValue\",\"Resource\":\"arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:BatchGetItem",
                  "dynamodb:BetchWriteItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:GetItem",
                  "dynamodb:PartiQLDelete",
                  "dynamodb:PartiQLInsert",
                  "dynamodb:PartiQLSelect",
                  "dynamodb:PartiQLUpdate",
                  "dynamodb:PutItem",
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:UpdateItem"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states",
                  "arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens"
                ],
                "sid": "AccessUserCredentialStore"
              },
              {
                "actions": [
                  "secretsmanager:GetSecretValue"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51"
                ],
                "sid": "AccessClientSecret"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "authorization_states",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states",
            "attribute": [
              {
                "name": "SessionID",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "deletion_protection_enabled": false,
            "global_secondary_index": [],
            "hash_key": "SessionID",
            "id": "od-auth-refresh-authorization-states",
            "import_table": [],
            "local_secondary_index": [],
            "name": "od-auth-refresh-authorization-states",
            "on_demand_throughput": [],
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 0,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_source_table_arn": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {},
            "tags_all": {
              "Purpose": "OneDriveAuthRefreshServerless"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "Expiration",
                "enabled": true
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "tokens",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens",
            "attribute": [
              {
                "name": "ID",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "deletion_protection_enabled": false,
            "global_secondary_index": [],
            "hash_key": "ID",
            "id": "od-auth-refresh-tokens",
            "import_table": [],
            "local_secondary_index": [],
            "name": "od-auth-refresh-tokens",
            "on_demand_throughput": [],
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 0,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_source_table_arn": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {},
            "tags_all": {
              "Purpose": "OneDriveAuthRefreshServerless"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::129008548655:role/od-auth-refresh-authorizer",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-03-15T19:14:44Z",
            "description": "",
            "force_detach_policies": false,
            "id": "od-auth-refresh-authorizer",
            "inline_policy": [
              {
                "name": "authorizer",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"dynamodb:UpdateItem\",\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:PutItem\",\"dynamodb:PartiQLUpdate\",\"dynamodb:PartiQLSelect\",\"dynamodb:PartiQLInsert\",\"dynamodb:PartiQLDelete\",\"dynamodb:GetItem\",\"dynamodb:DeleteItem\",\"dynamodb:BetchWriteItem\",\"dynamodb:BatchGetItem\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens\",\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states\"],\"Sid\":\"AccessUserCredentialStore\"},{\"Action\":\"secretsmanager:GetSecretValue\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51\",\"Sid\":\"AccessClientSecret\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "od-auth-refresh-authorizer",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {
              "Purpose": "OneDriveAuthRefreshServerless"
            },
            "unique_id": "AROAR4CMCHMXZXOIKCEEL"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.assume_role_policy_for_lambda"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "authorizer_authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "od-auth-refresh-authorizer:authorizer",
            "name": "authorizer",
            "name_prefix": "",
            "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"dynamodb:UpdateItem\",\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:PutItem\",\"dynamodb:PartiQLUpdate\",\"dynamodb:PartiQLSelect\",\"dynamodb:PartiQLInsert\",\"dynamodb:PartiQLDelete\",\"dynamodb:GetItem\",\"dynamodb:DeleteItem\",\"dynamodb:BetchWriteItem\",\"dynamodb:BatchGetItem\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-tokens\",\"arn:aws:dynamodb:ap-northeast-1:129008548655:table/od-auth-refresh-authorization-states\"],\"Sid\":\"AccessUserCredentialStore\"},{\"Action\":\"secretsmanager:GetSecretValue\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51\",\"Sid\":\"AccessClientSecret\"}]}",
            "role": "od-auth-refresh-authorizer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.authorization_states",
            "aws_dynamodb_table.tokens",
            "aws_iam_role.authorizer",
            "aws_secretsmanager_secret.client_secret",
            "data.aws_iam_policy_document.assume_role_policy_for_lambda",
            "data.aws_iam_policy_document.authorizer",
            "random_uuid.client_secret_store"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "authorizer_AWSLambdaBasicExecutionRole",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "od-auth-refresh-authorizer-20250315193437500100000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "od-auth-refresh-authorizer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.authorizer",
            "data.aws_iam_policy_document.assume_role_policy_for_lambda"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:ap-northeast-1:129008548655:function:od-auth-refresh-authorizer",
            "code_sha256": "cZVKuQuaVUyTf5645n9p2fmd/lW75DvxfW37oHKHX+U=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "AUTHORIZATION_STATES_TABLE_NAME": "od-auth-refresh-authorization-states",
                  "CLIENT_SECRET_ARN": "arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51",
                  "TOKENS_TABLE_NAME": "od-auth-refresh-tokens"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "./authorizer.zip",
            "function_name": "od-auth-refresh-authorizer",
            "handler": "lambda_function.lambda_handler",
            "id": "od-auth-refresh-authorizer",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:129008548655:function:od-auth-refresh-authorizer/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-03-15T22:19:20.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/od-auth-refresh-authorizer",
                "system_log_level": ""
              }
            ],
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:ap-northeast-1:129008548655:function:od-auth-refresh-authorizer:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:129008548655:function:od-auth-refresh-authorizer:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::129008548655:role/od-auth-refresh-authorizer",
            "runtime": "python3.12",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "cZVKuQuaVUyTf5645n9p2fmd/lW75DvxfW37oHKHX+U=",
            "source_code_size": 1740,
            "tags": {},
            "tags_all": {
              "Purpose": "OneDriveAuthRefreshServerless"
            },
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_dynamodb_table.authorization_states",
            "aws_dynamodb_table.tokens",
            "aws_iam_role.authorizer",
            "aws_secretsmanager_secret.client_secret",
            "data.archive_file.authorizer",
            "data.aws_iam_policy_document.assume_role_policy_for_lambda",
            "random_uuid.client_secret_store"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function_url",
      "name": "authorizer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "authorization_type": "NONE",
            "cors": [],
            "function_arn": "arn:aws:lambda:ap-northeast-1:129008548655:function:od-auth-refresh-authorizer",
            "function_name": "od-auth-refresh-authorizer",
            "function_url": "https://sf73ov6leh7sdtsctihdtlipvq0pykmd.lambda-url.ap-northeast-1.on.aws/",
            "id": "od-auth-refresh-authorizer",
            "invoke_mode": "BUFFERED",
            "qualifier": "",
            "timeouts": null,
            "url_id": "sf73ov6leh7sdtsctihdtlipvq0pykmd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.authorization_states",
            "aws_dynamodb_table.tokens",
            "aws_iam_role.authorizer",
            "aws_lambda_function.authorizer",
            "aws_secretsmanager_secret.client_secret",
            "data.archive_file.authorizer",
            "data.aws_iam_policy_document.assume_role_policy_for_lambda",
            "random_uuid.client_secret_store"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_secretsmanager_secret",
      "name": "client_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51",
            "description": "",
            "force_overwrite_replica_secret": false,
            "id": "arn:aws:secretsmanager:ap-northeast-1:129008548655:secret:od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce-EVuA51",
            "kms_key_id": "",
            "name": "od-auth-refresh-client-secret-1abd968e-d5ca-5f05-69b0-49a21fd3b2ce",
            "name_prefix": "",
            "policy": "",
            "recovery_window_in_days": 7,
            "replica": [],
            "tags": {},
            "tags_all": {
              "Purpose": "OneDriveAuthRefreshServerless"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "random_uuid.client_secret_store"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_uuid",
      "name": "client_secret_store",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1abd968e-d5ca-5f05-69b0-49a21fd3b2ce",
            "keepers": null,
            "result": "1abd968e-d5ca-5f05-69b0-49a21fd3b2ce"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
